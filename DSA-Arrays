1.) 
class Memory {
  constructor() {
    this.memory = new Float64Array(1024);
    this.head = 0;
  }

  allocate(size) {
    if (this.head + size > this.memory.length) {
      return null;
    }

    let start = this.head;

    this.head += size;
    return start;
  }

  free(ptr) {}

  copy(toIdx, fromIdx, size) {
    if (fromIdx === toIdx) {
      return;
    }

    if (fromIdx > toIdx) {
      // Iterate forwards
      for (let i = 0; i < size; i++) {
        this.set(toIdx + i, this.get(fromIdx + i));
      }
    } else {
      // Iterate backwards
      for (let i = size - 1; i >= 0; i--) {
        this.set(toIdx + i, this.get(fromIdx + i));
      }
    }
  }

  get(ptr) {
    return this.memory[ptr];
  }

  set(ptr, value) {
    this.memory[ptr] = value;
  }
}

module.exports = Memory;

2. Explore the push() method

What is the length, capacity and memory address of your array? 1
What is the length, capacity and memory address of your array? Explain the result of your program after adding the new lines of code.
6 - We're pushing new pieces of memory into the array.

3.) After adding:   
arr.pop();
arr.pop();
arr.pop();

The last three items in the array are removed and we now have a array of 3 items.

4.) The result is tauhida
_resize() is meant to add a space so the array has the capacity to increase its size/memory

5.) arr.join('%20')

6. Filtering an array
arr = [1,3,5,7,9,11,23,4324,234,22];

for (let i = 0; i<arr.length; i++){
  if (arr[i] > 5){
    leftover = arr.length - i;
    arr.splice(i,leftover) 
    console.log(arr)
  }
}

7.) 
arr = [4, 6, -3, 5, -2, 1];

arrSum = function(arr){
  return arr.reduce(function(a,b){
    
    return a + b
  }, 0);
}

console.log(arrSum(arr)) //you wanted the output of 12 but the output should be 11. You can add +1 to the function

8.) Merge arrays
arr1 = [1, 3, 6, 8, 11];
arr2 = [2, 3, 5, 8, 9, 10];
arr = arr1.concat(arr2)
console.log(arr.sort(function(a, b){return a - b}));

9.) Remove characters

arr = 'Battle of the Vowels: Hawaii vs. Grozny'

console.log(arr.replace(/[aeiou]/ig,''))

10. Products

var arr1 = [3, 5, 7, 9];
for(var i=0; i<arr1.length; i++) {
	//Let's take the constant factor as 2
	arr1[i] = arr1[i] * 2;
}
console.log(arr1);

11.)

12.)
word1 = 'amazon';
word2 = 'azonam';

var regex = /[^a-z0-9]/gi;

var str1 = this.word1.replace(regex, ''),
    str2 = this.word2.replace(regex, '');

console.log(this.isAnagram = str1.length > 0 && str1.length === str2.length && (str1.toLowerCase().split('').sort().join('') === str2.toLowerCase().split('').sort().join('')));
